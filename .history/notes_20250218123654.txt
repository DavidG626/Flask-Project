@progress_note_bp.route('/edit_progress_note/<int:note_id>', methods=['GET', 'POST'])
@login_required
@check_session_timeout
def edit_progress_note(note_id):
    progress_note = ProgressNote.query.get_or_404(note_id)
    patient = Patient.query.get(progress_note.patient_id)
    
    # Get patient's existing diagnoses
    patient_diagnoses = PatientDiagnosis.query.filter_by(patient_id=patient.id).all()
    diagnoses_details = []
    for diag in patient_diagnoses:
        icd10_code = ICD10Code.query.get(diag.icd10_id)
        if icd10_code:
            diagnoses_details.append(icd10_code)
            
    # Get all available ICD10 codes for dropdown
    icd10_codes = ICD10Code.query.order_by(ICD10Code.description).all()
    
    if (patient.provider_first_name != current_user.first_name or 
        patient.provider_last_name != current_user.last_name):
        flash('You do not have permission to edit this progress note.', 'error')
        return redirect(url_for('dashboard.my_patients'))
    
    if request.method == 'POST':
        try:
            # Update progress note fields
            progress_note.subjective_complaints = request.form.get('subjective_complaints')
            progress_note.objective_findings = request.form.get('objective_findings')
            progress_note.treatment_plan = request.form.get('treatment_plan')
            progress_note.work_status = request.form.get('work_status')
            progress_note.work_restrictions = request.form.get('work_restrictions')

            # Update dates
            exam_date = request.form.get('date_of_exam')
            if exam_date:
                progress_note.date_of_exam = datetime.strptime(exam_date, '%Y/%m/%d')

            injury_date = request.form.get('date_of_injury')
            if injury_date:
                progress_note.date_of_injury = datetime.strptime(injury_date, '%Y/%m/%d')

            

            rtw_date = request.form.get('work_status_date')
            if rtw_date:
                if progress_note.work_status == 'full_duty':
                    progress_note.full_duty_date = datetime.strptime(rtw_date, '%Y-%m-%d')
                elif progress_note.work_status == 'modified':
                    progress_note.modified_work_date = datetime.strptime(rtw_date, '%Y-%m-%d')
                elif progress_note.work_status == 'off_work':
                    progress_note.off_work_until = datetime.strptime(rtw_date, '%Y-%m-%d')
                                    
            # Update checkboxes
            progress_note.is_periodic_report = bool(request.form.get('is_periodic_report'))
            progress_note.is_change_in_treatment = bool(request.form.get('is_change_in_treatment'))
            progress_note.is_release_from_care = bool(request.form.get('is_release_from_care'))
            progress_note.is_change_in_work_status = bool(request.form.get('is_change_in_work_status'))
            progress_note.is_need_for_referral = bool(request.form.get('is_need_for_referral'))
            progress_note.is_response_to_request = bool(request.form.get('is_response_to_request'))
            progress_note.is_change_in_condition = bool(request.form.get('is_change_in_condition'))
            progress_note.is_need_for_surgery = bool(request.form.get('is_need_for_surgery'))
            progress_note.is_request_for_authorization = bool(request.form.get('is_request_for_authorization'))

            # Handle diagnoses
            # Update diagnoses 
            selected_diagnoses = request.form.getlist('diagnoses')
            if selected_diagnoses:
                # Remove patient's old diagnosis links (not the ICD10 codes themselves)
                PatientDiagnosis.query.filter_by(patient_id=patient.id).delete()
                
                # Add the new diagnosis links
                for diagnosis_id in selected_diagnoses:
                    if diagnosis_id:
                        new_diagnosis = PatientDiagnosis(
                            patient_id=patient.id,
                            icd10_id=int(diagnosis_id)
                        )
                        db.session.add(new_diagnosis)
            
            db.session.commit()
            flash('Progress note updated successfully!', 'success')
            return redirect(url_for('pr2.view_progress_note', note_id=note_id))
        except Exception as e:
            db.session.rollback()
            print(f"Error: {str(e)}")  # Add this line to see the specific error
            flash('Error updating progress note.', 'error')
            return redirect(url_for('pr2.view_progress_note', note_id=note_id))
    
    return render_template('edit_progress_note.html', 
                         progress_note=progress_note, 
                         patient=patient,
                         patient_diagnoses=diagnoses_details,
                         icd10_codes=icd10_codes)
